name: CI
on:
  push:
    branches: [ "main", "experiment/**", "feature/**" ]
  pull_request:
    branches: [ "main", "experiment/**" ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: skinmatch
          POSTGRES_USER: skinuser
          POSTGRES_PASSWORD: skinpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U skinuser -d skinmatch"
          --health-interval=5s --health-timeout=5s --health-retries=10

    env:
      DATABASE_URL: postgres://skinuser:skinpass@localhost:5432/skinmatch
      DJANGO_SECRET_KEY: dummy
      DJANGO_DEBUG: "False"
      GOOGLE_TEST_MODE: "1"    

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install pytest bandit pip-audit pytest-cov

      - name: Run migrations
        run: python backend/manage.py migrate

      - name: Run unit tests
        working-directory: backend
        env:
          DJANGO_SETTINGS_MODULE: apidemo.settings
        run: pytest backend -q --disable-warnings --maxfail=1

      - name: Security scan (Bandit)
        run: bandit -r backend -q || true

      - name: Dependency audit
        run: pip-audit -r backend/requirements.txt || true

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm ci
        working-directory: frontend

      - run: npm run lint
        working-directory: frontend

      - run: npm run build
        working-directory: frontend

      - name: Run E2E tests (Playwright)
        working-directory: frontend
        run: |
          npx playwright install --with-deps
          npm run e2e || echo "Skip E2E errors in CI preview"
