services:
  backend:
    build: ./backend
    container_name: skinmatch-backend
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py createsuperuser --noinput || true &&
        python manage.py runserver 0.0.0.0:8000
      "
    environment:
      - DJANGO_SUPERUSER_USERNAME=fongfufu
      - DJANGO_SUPERUSER_EMAIL=fongfufu@gmail.com
      - DJANGO_SUPERUSER_PASSWORD=pakorn1234
      - POSTGRES_DB=skinmatch
      - POSTGRES_USER=skinuser
      - POSTGRES_PASSWORD=skinpass
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://skinuser:skinpass@db:5432/skinmatch
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - path: ./backend
          target: /app
          action: sync
        - path: ./backend/requirements.txt
          action: rebuild

  frontend:
    build:
      context: ./frontend
      args:
        - BACKEND_URL=http://backend:8000
    container_name: skinmatch-frontend
    environment:
      - BACKEND_URL=http://backend:8000
    ports:
    - "3000:3000"
    depends_on:
    - backend
    develop:
      watch:
        - path: ./frontend
          target: /app
          action: sync
        - path: ./frontend/package.json
          action: rebuild


  db:
    image: postgres:15
    container_name: skinmatch-db
    environment:
      POSTGRES_DB: skinmatch
      POSTGRES_USER: skinuser
      POSTGRES_PASSWORD: skinpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "skinmatch", "-U", "skinuser"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
